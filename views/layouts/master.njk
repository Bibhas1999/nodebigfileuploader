<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
        <!-- JavaScript Bundle with Popper -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
        <title>{{data.title}}</title>
        <link href="../../css/style.css" rel="stylesheet" >

    </head>
    <body>
        {% include "./navbar.njk" %}
        {% block content %}{% endblock %}
        <script>
            let form = document.getElementById('upload_form')
            let msg_elem = document.getElementById('msg')
            let file_label = document.getElementById('csv_file_input_label')
            let uploadBtn = document.getElementById('uploadBtn')
            let file_input = document.getElementById('csv_file_input')
            let progress = document.getElementById('progress')
            let progressbar = document.getElementById('progress-bar')

            toggleProgress(progressbar,false)
            
            file_input.addEventListener('change', (e) => {
                const file = e.target.files[0];
                const isValid = validate(file, msg_elem)
                isValid?toggleBtn(uploadBtn,false):toggleBtn(uploadBtn,true)
                displayFileName(file?.name, file_label)
            });

            form.addEventListener('submit', (e) => {
                e.preventDefault()
                const file = e?.target[0]?.files[0]
                const isValid = validate(file, msg_elem)
                if (isValid) {
                    toggleBtn(uploadBtn,true)
                    uploadFile(file)
                }
            })

            // validating file format
            function validate(file, htmlElem) {
                if (!file) {
                    setText(htmlElem,"No file is selected. Please select a file.","#d9534f")
                    return false
                }
                htmlElem.innerText=""
                let extension = file?.name?.split('.')[1]
                 
                if (extension == "xlsx" || extension == "xls" || extension == "csv") {
                    return true
                }
                setText(htmlElem,"Invalid file format!. Please select a valid file","#d9534f")
                return false
            }
            
            //toggling button disable or enable
            function toggleBtn(button,value) {
                button.disabled = value
            }
           
            //display filename in label
            function displayFileName(name,label){
                let defaultText = "Select a CSV/Excel file"
                if(name){
                 label.innerText=name
                }else{
                 label.innerText=defaultText 
                }
              
            }
            // uploading the selected csv file as array buffer
            function uploadFile (file) {
                const fileName = Math.random() * 1000 +"_"+ file.name
                const fileReader = new FileReader()
                
                fileReader.addEventListener('load',async (e)=>{
                    const CHUNK_SIZE = (e.target.result.byteLength*10)/100
                    const chunck_count = e.target.result.byteLength/CHUNK_SIZE
                    
                    for(let chunkId = 0 ; chunkId < chunck_count+1;chunkId++){
                       const chunk = e.target.result.slice(chunkId*CHUNK_SIZE,chunkId*CHUNK_SIZE + CHUNK_SIZE)
                       
                       try{
                       let response = await fetch('http://localhost:4000/upload/csv',{
                        "method":"POST",
                        "headers":{
                           "content-type":"application/octet-stream",
                           "content-length":chunk.length,
                           "file-name":fileName
                        },
                        "body":chunk
                       })
                       
                       console.log(response.status)
                       toggleProgress(progressbar,true)
                       let percentage = chunkId*100/chunck_count +"%"
                       setProgress(progress,percentage)
                       }catch(error){
                         console.log(error)
                         setText(msg_elem,"Something went wrong please try again","#d9534f")
                       } 
                    } 
                })
                fileReader.readAsArrayBuffer(file)
            }

            //visualizing the amount of chunks processed in percentage
            function setProgress(html_elem,percentage){
              if(percentage =="100%"){
               setTimeout(()=>{
               toggleProgress(progressbar,false)
               setText(msg_elem,"File Uploaded Successfully","#5cb85c")
               setTimeout(()=>{
                 formReset()
               },2000)
               },2000)
               }
              html_elem.style.width = percentage
              html_elem.textContent = percentage
              
            }

            //setting text for error and success 
            function setText(html_elem,text,color){
               html_elem.textContent = text
               html_elem.style.color=color
            } 

            function toggleProgress(html_elem,value){
                if(value){
                  html_elem.style.display = "block"
                }else{
                   html_elem.style.display = "none"
                }
            }
            function formReset(){
              form.reset()
              displayFileName('',file_label)
              msg_elem.innerText = ''
              toggleBtn(uploadBtn,true)
            }
        </script>
    </body>
</html>